/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface FirebaseConfig {
  database?:
    | {
        postdeploy?: string[] | string;
        predeploy?: string[] | string;
        rules: string;
      }
    | (
        | {
            instance: string;
            postdeploy?: string[] | string;
            predeploy?: string[] | string;
            rules: string;
            target?: string;
          }
        | {
            instance?: string;
            postdeploy?: string[] | string;
            predeploy?: string[] | string;
            rules: string;
            target: string;
          }
      )[];
  emulators?: {
    auth?: {
      host?: string;
      port?: number;
    };
    database?: {
      host?: string;
      port?: number;
    };
    firestore?: {
      host?: string;
      port?: number;
    };
    functions?: {
      host?: string;
      port?: number;
    };
    hosting?: {
      host?: string;
      port?: number;
    };
    hub?: {
      host?: string;
      port?: number;
    };
    logging?: {
      host?: string;
      port?: number;
    };
    pubsub?: {
      host?: string;
      port?: number;
    };
    storage?: {
      host?: string;
      port?: number;
    };
    ui?: {
      enabled?: boolean;
      host?: string;
      port?: string | number;
    };
  };
  firestore?: {
    indexes?: string;
    postdeploy?: string[] | string;
    predeploy?: string[] | string;
    rules?: string;
  };
  functions?: {
    ignore?: string[];
    postdeploy?: string[] | string;
    predeploy?: string[] | string;
    runtime?: "nodejs10" | "nodejs12" | "nodejs14" | "nodejs16";
    source?: string;
  };
  hosting?:
    | {
        appAssociation?: string;
        cleanUrls?: boolean;
        headers?: (
          | {
              headers: {
                key: string;
                value: string;
              }[];
              source: string;
            }
          | {
              headers: {
                key: string;
                value: string;
              }[];
              regex: string;
            }
        )[];
        i18n?: {
          root: string;
        };
        ignore?: string[];
        postdeploy?: string[] | string;
        predeploy?: string[] | string;
        public?: string;
        redirects?: (
          | {
              destination: string;
              source: string;
              type: number;
            }
          | {
              destination: string;
              regex: string;
              type: number;
            }
        )[];
        rewrites?: (
          | {
              destination: string;
              source: string;
            }
          | {
              function: string;
              source: string;
            }
          | {
              run: {
                region?: string;
                serviceId: string;
              };
              source: string;
            }
          | {
              dynamicLinks: boolean;
              source: string;
            }
          | {
              destination: string;
              regex: string;
            }
          | {
              function: string;
              regex: string;
            }
          | {
              regex: string;
              run: {
                region?: string;
                serviceId: string;
              };
            }
          | {
              dynamicLinks: boolean;
              regex: string;
            }
        )[];
        site?: string;
        target?: string;
        trailingSlash?: boolean;
      }
    | (
        | {
            appAssociation?: string;
            cleanUrls?: boolean;
            headers?: (
              | {
                  headers: {
                    key: string;
                    value: string;
                  }[];
                  source: string;
                }
              | {
                  headers: {
                    key: string;
                    value: string;
                  }[];
                  regex: string;
                }
            )[];
            i18n?: {
              root: string;
            };
            ignore?: string[];
            postdeploy?: string[] | string;
            predeploy?: string[] | string;
            public?: string;
            redirects?: (
              | {
                  destination: string;
                  source: string;
                  type: number;
                }
              | {
                  destination: string;
                  regex: string;
                  type: number;
                }
            )[];
            rewrites?: (
              | {
                  destination: string;
                  source: string;
                }
              | {
                  function: string;
                  source: string;
                }
              | {
                  run: {
                    region?: string;
                    serviceId: string;
                  };
                  source: string;
                }
              | {
                  dynamicLinks: boolean;
                  source: string;
                }
              | {
                  destination: string;
                  regex: string;
                }
              | {
                  function: string;
                  regex: string;
                }
              | {
                  regex: string;
                  run: {
                    region?: string;
                    serviceId: string;
                  };
                }
              | {
                  dynamicLinks: boolean;
                  regex: string;
                }
            )[];
            site?: string;
            target: string;
            trailingSlash?: boolean;
          }
        | {
            appAssociation?: string;
            cleanUrls?: boolean;
            headers?: (
              | {
                  headers: {
                    key: string;
                    value: string;
                  }[];
                  source: string;
                }
              | {
                  headers: {
                    key: string;
                    value: string;
                  }[];
                  regex: string;
                }
            )[];
            i18n?: {
              root: string;
            };
            ignore?: string[];
            postdeploy?: string[] | string;
            predeploy?: string[] | string;
            public?: string;
            redirects?: (
              | {
                  destination: string;
                  source: string;
                  type: number;
                }
              | {
                  destination: string;
                  regex: string;
                  type: number;
                }
            )[];
            rewrites?: (
              | {
                  destination: string;
                  source: string;
                }
              | {
                  function: string;
                  source: string;
                }
              | {
                  run: {
                    region?: string;
                    serviceId: string;
                  };
                  source: string;
                }
              | {
                  dynamicLinks: boolean;
                  source: string;
                }
              | {
                  destination: string;
                  regex: string;
                }
              | {
                  function: string;
                  regex: string;
                }
              | {
                  regex: string;
                  run: {
                    region?: string;
                    serviceId: string;
                  };
                }
              | {
                  dynamicLinks: boolean;
                  regex: string;
                }
            )[];
            site: string;
            target?: string;
            trailingSlash?: boolean;
          }
      )[];
  remoteconfig?: {
    postdeploy?: string[] | string;
    predeploy?: string[] | string;
    template: string;
  };
  storage?:
    | {
        postdeploy?: string[] | string;
        predeploy?: string[] | string;
        rules: string;
        target?: string;
      }
    | {
        bucket: string;
        postdeploy?: string[] | string;
        predeploy?: string[] | string;
        rules: string;
        target?: string;
      }[];
}
